[tool.poetry]
name = "vintasend-sqlalchemy"
version = "0.1.4"
description = "SQLAlchemy backend implementation for VintaSend"
authors = ["Hugo bessa <hugo@vinta.com.br>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "vintasend_sqlalchemy" }]
include = [
  { path = "vintasend_sqlalchemy/py.typed", format = "wheel" }
]

[tool.poetry.dependencies]
python = "<3.14,>=3.10"
sqlalchemy = "^2.0.36"
vintasend = "0.1.4"
alembic = "^1.14.0"
pytest-asyncio = "^0.24.0"
greenlet = "^3.1.1"


[tool.poetry.group.dev.dependencies]
aiosqlite = "^0.20.0"
freezegun = "^1.5.1"
coverage = "^7.6.4"
tox = "^4.23.2"
pytest = "^8.3.3"
pytest-xdist = {version = "^3.6.1", extras=["psutil"]}
pytest-cov = "^6.0.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-builtins
    "DJ",
    # isort
    "I",
    # flake8-logging-format
    "G",
    # flake8-no-pep420
    "INP",
    # Ruff-specific rules
    "RUF",
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "virtualenvs",
    "*/migrations/*",
]
ignore = [
    # Disable eradicate (commented code removal)
    "ERA001",
    # Disable Conflicting lint rules,
    # see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "W191",
    "E501",
    "E111",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "COM812",
    "COM819",
    "ISC001",
    "ISC002",
    # Allow `except Exception`:
    "BLE001",
    # Disable unused `noqa` directive
    "RUF100",
]
line-length = 100
indent-width = 4
target-version = "py312"
# Allow unused variables when underscore-prefixed:
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
lines-after-imports = 2

[tool.ruff.per-file-ignores]
# Ignore "E402", "F403", "F405" (import violations) in __init__.py files.
# Ignore "S" (flake8-bandit) and "N802" (function name should be lowercase) in tests and docs.
# Ignore "RUF" (Ruff-specific rules) and "I" (isort) in migrations.
"__init__.py" = ["E402", "F403", "F405"]
"**/{tests,docs}/*" = ["E402", "F403", "F405", "S", "N802"]
"**/*test*.py" = ["E402", "F403", "F405", "S", "N802"]
"**/{settings}/*" = ["E402", "F403", "F405"]
"**/migrations/*" = ["RUF", "I"]

[tool.coverage.run]
branch = true
source = ["backend"]
omit = [
    "**/venv/*",
    "**/env/*",
    "**/virtualenvs/*",
    "**/node_modules/*",
    "**/migrations/*",
    "**/settings/*",
    "**/tests/*",
]

[tool.pytest.ini_options]
python_files = ["test_*.py"]
addopts = "--dist=loadscope"
